@using BlazorWasm1.Models
@code {
    [Parameter, EditorRequired] public Trail Trail { get; set; } = default!;
}

<FormSection Title="Basic Details"
             HelpText="This information is used to identify the trail and can be searched to help hikers find it">
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label for="trailName"
                       class="font-weight-bold text-secondary">Name</label>
                <InputText @bind-Value="Trail.Name"
                           class="form-control" id="trailName" />
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <div class="form-group">
                <label for="trailDescription" class="font-weight-bol text-secondary">
                    Description
                </label>
                <InputTextArea @bind-Value="Trail.Description" rows="6" class="form-control" id="trailDescription" />
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label for="trailLocation" class="font-weight-bold text-secondary">Location</label>
                <InputText @bind-Value="Trail.Location" class="form-control" id="trailLocation" />
            </div>
        </div>
    </div>
</FormSection>

<FormSection Title="Difficulty" HelpText="Help other hikers out by telling them the length of the trail is how long it might take them.">
    <FormFieldSet Width="col-3">
        <label for="trailLength" class="font-weight-bold text-secondary">
            Length (km)
        </label>
        <InputNumber @bind-Value="Trail.Length" class="form-control" id="trailLength" />
    </FormFieldSet>
</FormSection>

<FormSection Title="Route Instructions"
             HelpText="Route instructions are a guide for the trail. This helps hikers new to the trail stay on track.">
    @{
        var i = 0;
    }
    @foreach (var routeInstruction in Trail.Route)
    {
        i++;
        routeInstruction.Stage = i;

        <div class="row">
            <div class="col-2">
                <div class="form-group">
                    <label class="font-weight-bold" text-secondary">
                        Stage
                    </label>
                    <p>@routeInstruction.Stage</p>
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    <label for="@routeInstruction.Description" class="font-weight-bold text-secondary">Description</label>
                    <InputText @bind-Value="routeInstruction.Description" class="form-control" id="routeInstructionDescription" />
                </div>
            </div>
            <div class="col-1 d-flex mt-3">
                <button @onclick="@(()=>Trail.Route.Remove(routeInstruction))" class="btn btn-link" type="button">
                    <svg width="1em" height="1em" viewBox="0 0 16 16"
                         ➥class="bi bi-x-circle-fill text-danger"
                         ➥ fill="currentColor"
                         ➥xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0
➥8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1
➥0-.708.708L7.293 8l-2.647 2.646a.5.5
➥0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0
➥.708-.708L8.707 8l2.647-2.646a.5.5 0 0
➥0-.708-.708L8 7.293 5.354 4.646z" />
                    </svg>
                </button>
            </div>
        </div>
    }
    <div class="row">
        <div class="col">
            <button class="btn btn-outline-primary" type="button" @onclick="@(()=>Trail.Route.Add(new Domain.TrailDto.RouteInstruction()))">Add Instruction</button>
        </div>
    </div>
</FormSection>